
parameters:
  - name: veracode-api-id
    default: ""
    type: string
    displayName: Veracode API ID
  - name: veracode-api-key
    default: ""
    type: string
    displayName: Veracode API Key
  - name: applicationName
    default: ""
    type: string
    displayName: Application Name
  - name: sandboxName
    default: "Release Candidate"
    type: string
    displayName: Sandbox Name
    
jobs:
  - job: SAST_Release_Candidate_Promote
    displayName: Promotion of a Sandbox to Policy
   
    pool:
      vmImage: 'ubuntu-latest'
      
    variables:
      - name: ApplicationId
      - name: SandboxId
      - name: AnalysisId
      - name: AnalysisName
      - name: resultsReady
        value: "false"
    
    steps:
    - script: java --version
      continueOnError: true
      displayName: Report Java Version installed

    - pwsh: |
        $versionstring = curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/maven-metadata.xml | Out-String -Stream | Select-String -Pattern 'latest';
        $wrapper_version = $versionstring -replace '\s','' -replace '<latest>','' -replace '</latest>','';
        echo "Pulling down wrapper version: $wrapper_version"
        curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/$WRAPPER_VERSION/vosp-api-wrappers-java-$WRAPPER_VERSION-dist.zip -o $(Build.ArtifactStagingDirectory)/dist.zip
        7z e $(Build.ArtifactStagingDirectory)/dist.zip -o$(Build.ArtifactStagingDirectory)/extract/ -y
      displayName: Downloading the latest version of the Veracode Java API
      enabled: true

    - script: ls -la $(Build.ArtifactStagingDirectory)
      displayName: Show Artifact Directory Content

    - script: |
        ls -la $(Build.ArtifactStagingDirectory)/extract/
      displayName: Show Extract Directory Content
      enabled: true

    - script: |
        java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -version
      displayName: Veracode Wrapper Version
      enabled: false

    - powershell: |
        echo ${{parameters.veracode-api-id}}
        echo ${{parameters.veracode-api-key}}
        echo $appid
        echo "##vso[task.setvariable variable=ApplicationId]$appid"
        echo "Application ID: $(ApplicationId)"
        #If Blanck Report back that the application name cannot be found
      displayName: Retrieving Application ID

